trigger:
  - main

pool:
  vmImage: 'ubuntu-18.04'

stages:
  - stage: Build
    jobs:
      - job: BuildAPI
        steps:
         - checkout: self
         - task: DotNetCoreCLI@2
           inputs:
              command: 'publish'
              projects: '**/*.csproj'
              zipAfterPublish: true
         - task: PublishPipelineArtifact@1
           inputs:
            targetPath: "$(System.DefaultWorkingDirectory)"
            artifact: "drop"
            publishLocation: "pipeline"
  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
        - checkout: self
        - script: |
            terraform init
            terraform plan
            terraform apply
          workingDirectory: "$(System.DefaultWorkingDirectory)/WarOfHeroesAPI/Deployment/"
          env:
            ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION-ID)
            ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)              
            ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
            ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
        - task: DownloadPipelineArtifact@2
          inputs:
              buildType: "current"
              artifactName: "drop"
              targetPath: "$(System.DefaultWorkingDirectory)"
        - task: AzureRmWebAppDeployment@4
          inputs:
              ConnectionType: "AzureRM"
              azureSubscription: "warOfHeroes"
              appType: "webApp"
              WebAppName: "warOfHeroes"
              packageForLinux: "$(System.DefaultWorkingDirectory)/WarOfHeroesUserAPI.zip"